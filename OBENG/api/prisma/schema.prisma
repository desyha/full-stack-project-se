// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  username String @unique
  password String
  role String
  avatar String ?
  bengkel Bengkel[]
  review Review[]
  savedBengkel SavedBengkel[]

}

model Bengkel{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  address String
  rating Float ?
  services String[]
  specialization String
  description String
  image String ?
  coordinate Float[]
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  review Review[]
  savedBengkel SavedBengkel[]
}

model Review{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  bengkelId String @db.ObjectId
  bengkel Bengkel @relation(fields: [bengkelId], references: [id])
  description String
  rating Float
}

model SavedBengkel{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  bengkel Bengkel @relation(fields: [bengkelId], references: [id])
  userId String @db.ObjectId
  bengkelId String @db.ObjectId
  @@unique([userId, bengkelId])
}
